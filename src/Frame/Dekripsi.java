/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import Algorithm.RC5;
import Algorithm.RC6;
import Connection.ConnectionSet;
import DAO.DekripDAO;
import DAO.EnkripDAO;
import com.sun.management.OperatingSystemMXBean;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.lang.management.ManagementFactory;
import java.lang.management.MemoryMXBean;
import java.lang.management.ThreadMXBean;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import static javax.swing.JFileChooser.SAVE_DIALOG;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author USER
 */
public class Dekripsi extends javax.swing.JFrame {

    Connection con;
    ConnectionSet cn = new ConnectionSet();
    PreparedStatement ps;
    ResultSet rs;

    DekripDAO analisis = new DekripDAO();

    JPanel pane;
    File file;
    File file2;
    int keySize = 0;
    int keySize2 = 0;
    double kgt, dect;
    double kgt2, dect2;

    OperatingSystemMXBean operatingSystemMXBean = (OperatingSystemMXBean) ManagementFactory.getOperatingSystemMXBean();

    String nama_file_rc5;
    String nama_file_rc6;
    String ukuran_file_rc5;
    String ukuran_file_rc6;
    String waktu_rc5;
    String waktu_rc6;
    String memori_rc5;
    String memori_rc6;
    String cpu_rc5;
    String cpu_rc6;

    Timer timer;

    /**
     * Creates new form Dekripsi
     */
    public Dekripsi() {
        initComponents();
        pane = PaneMain;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PaneMain = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtDirektoriFileEnkripRC5 = new javax.swing.JTextField();
        txtDirektoriFileEnkripRC6 = new javax.swing.JTextField();
        txtDirektoriKeyRC5 = new javax.swing.JTextField();
        txtDirektoriKeyRC6 = new javax.swing.JTextField();
        txtDirektoriSimpanRC5 = new javax.swing.JTextField();
        txtDirektoriSimpanRC6 = new javax.swing.JTextField();
        btnBrowseFileEnkripRC5 = new javax.swing.JButton();
        btnBrowseFileEnkripRC6 = new javax.swing.JButton();
        btnBrowseKeyRC5 = new javax.swing.JButton();
        btnBrowseKeyRC6 = new javax.swing.JButton();
        btnBrowseSimpanRC5 = new javax.swing.JButton();
        btnBrowseSimpanRC6 = new javax.swing.JButton();
        btnEnkrip = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1060, 550));

        PaneMain.setOpaque(false);
        PaneMain.setPreferredSize(new java.awt.Dimension(1060, 550));
        PaneMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("Lokasi File Enkrip RC5");
        PaneMain.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, 190, 30));

        jLabel12.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 204, 204));
        jLabel12.setText("Lokasi File Enkrip RC6");
        PaneMain.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, 190, 30));

        jLabel8.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setText("Lokasi Key RC5");
        PaneMain.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 240, 190, 30));

        jLabel9.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 204, 204));
        jLabel9.setText("Lokasi Key RC6");
        PaneMain.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 280, 190, 30));

        jLabel10.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setText("Lokasi Simpan RC5");
        PaneMain.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 320, 190, 30));

        jLabel11.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 204, 204));
        jLabel11.setText("Lokasi Simpan RC6");
        PaneMain.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 360, 190, 30));

        txtDirektoriFileEnkripRC5.setEditable(false);
        txtDirektoriFileEnkripRC5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtDirektoriFileEnkripRC5.setForeground(new java.awt.Color(204, 204, 204));
        txtDirektoriFileEnkripRC5.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10)));
        txtDirektoriFileEnkripRC5.setCaretColor(new java.awt.Color(255, 255, 255));
        txtDirektoriFileEnkripRC5.setOpaque(false);
        PaneMain.add(txtDirektoriFileEnkripRC5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 160, 220, 30));

        txtDirektoriFileEnkripRC6.setEditable(false);
        txtDirektoriFileEnkripRC6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtDirektoriFileEnkripRC6.setForeground(new java.awt.Color(204, 204, 204));
        txtDirektoriFileEnkripRC6.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10)));
        txtDirektoriFileEnkripRC6.setCaretColor(new java.awt.Color(255, 255, 255));
        txtDirektoriFileEnkripRC6.setOpaque(false);
        PaneMain.add(txtDirektoriFileEnkripRC6, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 200, 220, 30));

        txtDirektoriKeyRC5.setEditable(false);
        txtDirektoriKeyRC5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtDirektoriKeyRC5.setForeground(new java.awt.Color(204, 204, 204));
        txtDirektoriKeyRC5.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10)));
        txtDirektoriKeyRC5.setCaretColor(new java.awt.Color(255, 255, 255));
        txtDirektoriKeyRC5.setOpaque(false);
        PaneMain.add(txtDirektoriKeyRC5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 240, 220, 30));

        txtDirektoriKeyRC6.setEditable(false);
        txtDirektoriKeyRC6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtDirektoriKeyRC6.setForeground(new java.awt.Color(204, 204, 204));
        txtDirektoriKeyRC6.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10)));
        txtDirektoriKeyRC6.setCaretColor(new java.awt.Color(255, 255, 255));
        txtDirektoriKeyRC6.setOpaque(false);
        PaneMain.add(txtDirektoriKeyRC6, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 280, 220, 30));

        txtDirektoriSimpanRC5.setEditable(false);
        txtDirektoriSimpanRC5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtDirektoriSimpanRC5.setForeground(new java.awt.Color(204, 204, 204));
        txtDirektoriSimpanRC5.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10)));
        txtDirektoriSimpanRC5.setCaretColor(new java.awt.Color(255, 255, 255));
        txtDirektoriSimpanRC5.setOpaque(false);
        PaneMain.add(txtDirektoriSimpanRC5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 320, 220, 30));

        txtDirektoriSimpanRC6.setEditable(false);
        txtDirektoriSimpanRC6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtDirektoriSimpanRC6.setForeground(new java.awt.Color(204, 204, 204));
        txtDirektoriSimpanRC6.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 10)));
        txtDirektoriSimpanRC6.setCaretColor(new java.awt.Color(255, 255, 255));
        txtDirektoriSimpanRC6.setOpaque(false);
        PaneMain.add(txtDirektoriSimpanRC6, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 360, 220, 30));

        btnBrowseFileEnkripRC5.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        btnBrowseFileEnkripRC5.setForeground(new java.awt.Color(51, 51, 51));
        btnBrowseFileEnkripRC5.setText("Browse");
        btnBrowseFileEnkripRC5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBrowseFileEnkripRC5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseFileEnkripRC5ActionPerformed(evt);
            }
        });
        PaneMain.add(btnBrowseFileEnkripRC5, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 160, 70, 30));

        btnBrowseFileEnkripRC6.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        btnBrowseFileEnkripRC6.setForeground(new java.awt.Color(51, 51, 51));
        btnBrowseFileEnkripRC6.setText("Browse");
        btnBrowseFileEnkripRC6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBrowseFileEnkripRC6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseFileEnkripRC6ActionPerformed(evt);
            }
        });
        PaneMain.add(btnBrowseFileEnkripRC6, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 200, 70, 30));

        btnBrowseKeyRC5.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        btnBrowseKeyRC5.setForeground(new java.awt.Color(51, 51, 51));
        btnBrowseKeyRC5.setText("Browse");
        btnBrowseKeyRC5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBrowseKeyRC5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseKeyRC5ActionPerformed(evt);
            }
        });
        PaneMain.add(btnBrowseKeyRC5, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 240, 70, 30));

        btnBrowseKeyRC6.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        btnBrowseKeyRC6.setForeground(new java.awt.Color(51, 51, 51));
        btnBrowseKeyRC6.setText("Browse");
        btnBrowseKeyRC6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBrowseKeyRC6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseKeyRC6ActionPerformed(evt);
            }
        });
        PaneMain.add(btnBrowseKeyRC6, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 280, 70, 30));

        btnBrowseSimpanRC5.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        btnBrowseSimpanRC5.setForeground(new java.awt.Color(51, 51, 51));
        btnBrowseSimpanRC5.setText("Browse");
        btnBrowseSimpanRC5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBrowseSimpanRC5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseSimpanRC5ActionPerformed(evt);
            }
        });
        PaneMain.add(btnBrowseSimpanRC5, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 320, 70, 30));

        btnBrowseSimpanRC6.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        btnBrowseSimpanRC6.setForeground(new java.awt.Color(51, 51, 51));
        btnBrowseSimpanRC6.setText("Browse");
        btnBrowseSimpanRC6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBrowseSimpanRC6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseSimpanRC6ActionPerformed(evt);
            }
        });
        PaneMain.add(btnBrowseSimpanRC6, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 360, 70, 30));

        btnEnkrip.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        btnEnkrip.setForeground(new java.awt.Color(51, 51, 51));
        btnEnkrip.setText("Proses");
        btnEnkrip.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEnkrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnkripActionPerformed(evt);
            }
        });
        PaneMain.add(btnEnkrip, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 400, 490, 50));

        jLabel4.setFont(new java.awt.Font("Chocolate Cookies", 1, 56)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Dekrip");
        PaneMain.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 1060, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PaneMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PaneMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnkripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnkripActionPerformed
        // TODO add your handling code here:
        if (!txtDirektoriFileEnkripRC5.getText().equals("") || !txtDirektoriFileEnkripRC6.getText().equals("") || !txtDirektoriKeyRC5.getText().equals("") || !txtDirektoriKeyRC6.getText().equals("") || !txtDirektoriSimpanRC5.getText().equals("") || !txtDirektoriSimpanRC6.getText().equals("")) {
            execute();
            timer = new Timer(100, (e) -> {
                incrementTime();
            });
            timer.setRepeats(true);
            timer.start();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Error");
        }
    }//GEN-LAST:event_btnEnkripActionPerformed

    private void btnBrowseFileEnkripRC5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseFileEnkripRC5ActionPerformed
        // TODO add your handling code here:
        JFileChooser datafile = new JFileChooser("D:\\");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("RC5 Encripted File", "RC5-Encripted");
        datafile.setFileFilter(filter);
        datafile.setAcceptAllFileFilterUsed(false);
        int returnVal = datafile.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = datafile.getSelectedFile();
            nama_file_rc5 = file.getName();
            String dir = file.getAbsolutePath();
            txtDirektoriFileEnkripRC5.setText(dir);
            ukuran_file_rc5 = "" + String.format("%,d bytes", printFileSizeNIO(dir));
            System.out.println("2" + ukuran_file_rc5);
        }
    }//GEN-LAST:event_btnBrowseFileEnkripRC5ActionPerformed

    private void btnBrowseKeyRC5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseKeyRC5ActionPerformed
        // TODO add your handling code here:
        JFileChooser datafile = new JFileChooser("D:\\");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("RC5 key File", "RC5-key");
        datafile.setFileFilter(filter);
        datafile.setAcceptAllFileFilterUsed(false);
        int returnVal = datafile.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = datafile.getSelectedFile();
            String dir = file.getAbsolutePath();
            txtDirektoriKeyRC5.setText(dir);
        }
    }//GEN-LAST:event_btnBrowseKeyRC5ActionPerformed

    private void btnBrowseKeyRC6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseKeyRC6ActionPerformed
        // TODO add your handling code here:
        JFileChooser datafile = new JFileChooser("D:\\");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("RC6 key File", "RC6-key");
        datafile.setFileFilter(filter);
        datafile.setAcceptAllFileFilterUsed(false);
        int returnVal = datafile.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = datafile.getSelectedFile();
            String dir = file.getAbsolutePath();
            txtDirektoriKeyRC6.setText(dir);
        }
    }//GEN-LAST:event_btnBrowseKeyRC6ActionPerformed

    private void btnBrowseSimpanRC5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseSimpanRC5ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser("D:\\") {
            @Override
            public void approveSelection() {
                File f = getSelectedFile();
                if (f.exists() && getDialogType() == SAVE_DIALOG) {
                    int result = JOptionPane.showConfirmDialog(this, "File Sudah Ada, Timpa File?", "Pesan", JOptionPane.YES_NO_OPTION);
                    switch (result) {
                        case JOptionPane.YES_OPTION:
                            super.approveSelection();
                            return;
                        case JOptionPane.NO_OPTION:
                            return;
                        case JOptionPane.CLOSED_OPTION:
                            return;
                    }
                }
                super.approveSelection();
            }
        };

        fileChooser.setDialogTitle("Simpan");
        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            txtDirektoriSimpanRC5.setText(fileChooser.getSelectedFile().toString());
        }
    }//GEN-LAST:event_btnBrowseSimpanRC5ActionPerformed

    private void btnBrowseSimpanRC6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseSimpanRC6ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser("D:\\") {
            @Override
            public void approveSelection() {
                File f = getSelectedFile();
                if (f.exists() && getDialogType() == SAVE_DIALOG) {
                    int result = JOptionPane.showConfirmDialog(this, "File Sudah Ada, Timpa File?", "Pesan", JOptionPane.YES_NO_OPTION);
                    switch (result) {
                        case JOptionPane.YES_OPTION:
                            super.approveSelection();
                            return;
                        case JOptionPane.NO_OPTION:
                            return;
                        case JOptionPane.CLOSED_OPTION:
                            return;
                    }
                }
                super.approveSelection();
            }
        };

        fileChooser.setDialogTitle("Simpan");
        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            txtDirektoriSimpanRC6.setText(fileChooser.getSelectedFile().toString());
        }
    }//GEN-LAST:event_btnBrowseSimpanRC6ActionPerformed

    private void btnBrowseFileEnkripRC6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseFileEnkripRC6ActionPerformed
        // TODO add your handling code here:
        JFileChooser datafile = new JFileChooser("D:\\");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("RC6 Encripted File", "RC6-Encripted");
        datafile.setFileFilter(filter);
        datafile.setAcceptAllFileFilterUsed(false);
        int returnVal = datafile.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file2 = datafile.getSelectedFile();
            nama_file_rc6 = file2.getName();
            String dir = file2.getAbsolutePath();
            txtDirektoriFileEnkripRC6.setText(dir);
            ukuran_file_rc6 = "" + String.format("%,d bytes", printFileSizeNIO(dir));
            System.out.println("2" + ukuran_file_rc6);
        }
    }//GEN-LAST:event_btnBrowseFileEnkripRC6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dekripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dekripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dekripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dekripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dekripsi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PaneMain;
    private javax.swing.JButton btnBrowseFileEnkripRC5;
    private javax.swing.JButton btnBrowseFileEnkripRC6;
    private javax.swing.JButton btnBrowseKeyRC5;
    private javax.swing.JButton btnBrowseKeyRC6;
    private javax.swing.JButton btnBrowseSimpanRC5;
    private javax.swing.JButton btnBrowseSimpanRC6;
    private javax.swing.JButton btnEnkrip;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtDirektoriFileEnkripRC5;
    private javax.swing.JTextField txtDirektoriFileEnkripRC6;
    private javax.swing.JTextField txtDirektoriKeyRC5;
    private javax.swing.JTextField txtDirektoriKeyRC6;
    private javax.swing.JTextField txtDirektoriSimpanRC5;
    private javax.swing.JTextField txtDirektoriSimpanRC6;
    // End of variables declaration//GEN-END:variables
    void Execute(RC5 rc5) throws Exception {
        File myObj = new File(txtDirektoriKeyRC5.getText());
        FileReader fr = new FileReader(myObj.getAbsoluteFile());
        BufferedReader br = new BufferedReader(fr);
        String str = br.readLine();
        String format[] = str.split(" ,");
        System.out.println("pp" + format[0]);
        System.out.println("pp" + format[1]);
        System.out.println("pp" + format[2]);
        if (format.length != 3 || !format[2].equals("RC5")) {
            JOptionPane.showMessageDialog(this, "File Rusak");
        } else {
            keySize2 = Integer.parseInt(format[0]);
            System.out.println("pp" + keySize2);
            if (keySize2 == 0) {
                JOptionPane.showMessageDialog(null, "Please set KeySize First");
            }
            rc5.setKeysize(keySize2);
            double a = System.nanoTime();
            rc5.genrateKey(format[1]);
            kgt2 = System.nanoTime() - a;
            byte[] b = Files.readAllBytes(file.toPath());
            a = System.nanoTime();
            byte[] decrypt = rc5.decrypt(b);
            File file1 = new File(txtDirektoriSimpanRC5.getText());
            FileOutputStream fout = new FileOutputStream(file1);
            fout.write(decrypt);
            fout.close();
            b = Files.readAllBytes(file1.toPath());

            dect2 = System.nanoTime() - a;
            System.out.println(String.format("waktu Dekrip RC5 : %.2f detik",(double) dect / 1000000000));
            waktu_rc5 = String.format("%.2f detik",(double) dect / 1000000000);;
            
            JOptionPane.showMessageDialog(this,"Dekrip " + waktu_rc5, "RC5", JOptionPane.INFORMATION_MESSAGE);
            MemoryMXBean memoryMXBean = ManagementFactory.getMemoryMXBean();
            System.out.println(String.format("RC5 Initial memory: %.2f GB",(double) memoryMXBean.getHeapMemoryUsage().getInit() / 1073741824));
            System.out.println(String.format("RC5 Used heap memory: %.2f GB",(double) memoryMXBean.getHeapMemoryUsage().getUsed() / 1073741824));
            memori_rc5 = String.format("%.2f kb",(double) memoryMXBean.getHeapMemoryUsage().getUsed() / 1024);
            ThreadMXBean threadMXBean = ManagementFactory.getThreadMXBean();
            OperatingSystemMXBean operatingSystemMXBean = (OperatingSystemMXBean) ManagementFactory.getOperatingSystemMXBean();
            cpu_rc5 = ""+(String.format("%.2f ghz",operatingSystemMXBean.getProcessCpuLoad()));
        }

    }

    void Execute2(RC6 rc6) throws Exception {
        File myObj = new File(txtDirektoriKeyRC6.getText());
        FileReader fr = new FileReader(myObj.getAbsoluteFile());
        BufferedReader br = new BufferedReader(fr);
        String str = br.readLine();
        String format[] = str.split(" ,");
        System.out.println("pp" + format[0]);
        System.out.println("pp" + format[1]);
        System.out.println("pp" + format[2]);
        if (format.length != 3 || !format[2].equals("RC6")) {
            JOptionPane.showMessageDialog(this, "File Rusak");
        } else {
            keySize = Integer.parseInt(format[0]);
            System.out.println("pp" + keySize);
            if (keySize == 0) {
                JOptionPane.showMessageDialog(null, "Please set KeySize First");
            }
            rc6.setKeysize(keySize);
            double a = System.nanoTime();
            rc6.genrateKey(format[1]);
            kgt = System.nanoTime() - a;
            byte[] b = Files.readAllBytes(file2.toPath());
            a = System.nanoTime();
            byte[] decrypt = rc6.decrypt(b);
            File file1 = new File(txtDirektoriSimpanRC6.getText());
            FileOutputStream fout = new FileOutputStream(file1);
            fout.write(decrypt);
            fout.close();
            b = Files.readAllBytes(file1.toPath());

            dect = System.nanoTime() - a;
            System.out.println(String.format("waktu Enkrip RC6 : %.2f detik",(double) dect / 1000000000));
            waktu_rc6 = String.format("%.2f detik",(double) dect / 1000000000);;
           
            JOptionPane.showMessageDialog(this,"Dekrip " + waktu_rc6, "RC6", JOptionPane.INFORMATION_MESSAGE);
            MemoryMXBean memoryMXBean = ManagementFactory.getMemoryMXBean();
            System.out.println(String.format("RC6 Initial memory: %.2f GB",(double) memoryMXBean.getHeapMemoryUsage().getInit() / 1073741824));
            System.out.println(String.format("RC6 Used heap memory: %.2f GB",(double) memoryMXBean.getHeapMemoryUsage().getUsed() / 1073741824));
            memori_rc6 = String.format("%.2f kb",(double) memoryMXBean.getHeapMemoryUsage().getUsed() / 1024);
            ThreadMXBean threadMXBean = ManagementFactory.getThreadMXBean();
            OperatingSystemMXBean operatingSystemMXBean = (OperatingSystemMXBean) ManagementFactory.getOperatingSystemMXBean();
            cpu_rc6 = ""+(String.format("%.2f ghz",operatingSystemMXBean.getProcessCpuLoad()));
        }

    }

    public void execute() {
        ExecutorService executorService = Executors.newFixedThreadPool(8);
        executorService.submit(() -> {
            try {
                // TODO add your handling code here:
                RC5 rc5 = new RC5();
                Execute(rc5);
            } catch (Exception ex) {
                Logger.getLogger(Enkripsi.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
        executorService.submit(() -> {
            try {
                // TODO add your handling code here:
                RC6 rc6 = new RC6();
                Execute2(rc6);
            } catch (Exception ex) {
                Logger.getLogger(Enkripsi.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    public boolean savesanalisis(DekripDAO analisisDAO) {
        String sql = "INSERT INTO dekrip "
                + "(ukuran_file_rc5,ukuran_file_rc6,waktu_rc5,waktu_rc6,memori_rc5,memori_rc6,cpu_rc5,cpu_rc6,nama_file_rc5,nama_file_rc6) "
                + "VALUES (?,?,?,?,?,?,?,?,?,?)";
        try {
            con = cn.getConnect();
            ps = con.prepareStatement(sql);
            ps.setString(1, analisisDAO.getUkuran_file_rc5());
            ps.setString(2, analisisDAO.getUkuran_file_rc6());
            ps.setString(3, analisisDAO.getWaktu_rc5());
            ps.setString(4, analisisDAO.getWaktu_rc6());
            ps.setString(5, analisisDAO.getMemori_rc5());
            ps.setString(6, analisisDAO.getMemori_rc6());
            ps.setString(7, analisisDAO.getCpu_rc5());
            ps.setString(8, analisisDAO.getCpu_rc6());
            ps.setString(9, analisisDAO.getNama_file_rc5());
            ps.setString(10, analisisDAO.getNama_file_rc6());
            ps.execute();
            return true;
        } catch (SQLException e) {
            System.out.println(e.toString());
            return false;
        }
    }

    long bt = 0;

    public long printFileSizeNIO(String fileName) {
        Path path = Paths.get(fileName);
        try {
            // size of a file (in bytes)
            long bytes = Files.size(path);
            System.out.println(String.format("%,d bytes", bytes));
            System.out.println(String.format("%,d kb", bytes / 1024));
            bt = bytes;
            return bt;
        } catch (IOException e) {
            e.printStackTrace();
        }
        return bt;
    }

    private void incrementTime() {
        if (cpu_rc5 != null && cpu_rc6 != null) {
            analisis.setUkuran_file_rc5(ukuran_file_rc5);
            analisis.setUkuran_file_rc6(ukuran_file_rc6);
            analisis.setWaktu_rc5(waktu_rc5);
            analisis.setWaktu_rc6(waktu_rc6);
            analisis.setMemori_rc5(memori_rc5);
            analisis.setMemori_rc6(memori_rc6);
            analisis.setCpu_rc5(cpu_rc5);
            analisis.setCpu_rc6(cpu_rc6);
            analisis.setNama_file_rc5(nama_file_rc5);
            analisis.setNama_file_rc6(nama_file_rc6);
            savesanalisis(analisis);
            timer.stop();
        } else {
        }
    }

}
